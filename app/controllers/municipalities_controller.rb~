class MunicipalitiesController < ApplicationController

    before_filter :authenticate_admin!, :except => [:index, :show]

    def index
        @munis = Municipality.all
    end

    def show
        @muni = Municipality.find(params[:id])
        # print permits that were registered correctly
        CanTango.debug_permits_registry

        # print all permits that allow/deny that user to perform that action/ability
        CanTango.debug_ability(current_admin, :read, @muni)
    end

    def new
        @muni = Municipality.new
        # submits to create
    end

    def edit
        @muni = Municipality.find(params[:id])
        # submits to update
    end

    def create
        @muni = Municipality.new(params[:municipality])
        @muni.owner = current_admin
        error = !@muni.save;
        if (!error)
            flash[:notice] = "You have successfully created your municipality."
        else
            flash[:error] = "You couldn't create your municipality."
        end
        respond_to do |format|
            format.html {
                if (error)
                   render :new
                else
                   redirect_to municipalities_path
                end
            }
            format.all do
                method = "to_#{request_format}"
                text = {}.respond_to?(method) ? {}.send(method) : ""
                render :text => text, :status => :ok
            end
        end
    end

    def update
        @muni = Municipality.find(params[:id])
        location = params[:municipality][:location]
        if (location != nil)
            params[:municipality][:location] = view_context.from_location_str(location);
        end
        @muni.update_attributes(params[:municipality]);
        error = false
        if (@muni == nil)
            flash[:error] = "Municipality #{params[:id]} doesn't exist"
            error = true
        elsif (@muni.owner != current_admin)
            @muni.errors.add_to_base("You do not have permission to update this object")
            flash[:error] = "You do not have permission to update this object"
            error = true
        else
            @muni = current_admin
            error = !@muni.save;
            if (!error)
                flash[:notice] = "You have successfully updated your municipality."
            else
                flash[:error] = "You couldn't update your municipality."
            end
        end
        respond_to do |format|
            format.html {
                if (error)
                    render :edit
                else
                    redirect_to municipalities_path
                end
            }
            format.all do
                method = "to_#{request_format}"
                text = {}.respond_to?(method) ? {}.send(method) : ""
                render :text => text, :status => :ok
            end
        end
    end

    def delete
        @muni = Municipality.find(params[:id])
        if (@muni == nil)
            flash[:error] = "Municipality #{params[:id]} doesn't exist"
            error = true
        elsif (@muni.owner != current_admin)
            @muni.errors.add_to_base("You do not have permission to delete this object")
            error = true
        else
            @muni.delete()
        end
        respond_to do |format|
            format.html {
                redirect_to municipalities_path
            }
            format.all do
                method = "to_#{request_format}"
                text = {}.respond_to?(method) ? {}.send(method) : ""
                render :text => text, :status => :ok
            end
        end
    end

end